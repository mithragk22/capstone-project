# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

orbs:
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.7.0
  aws-cli: circleci/aws-cli@2.0.3
  
commands: 
  install-awscli:
    description: Install awscli
    steps:
      - run: 
          name: Install aws cli
          command: |
            apk add --update tar gzip  curl
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install
            aws --version
  install-eksctl:
    description: Install eksctl tools
    steps:
      - run: 
          name: Install eksctl
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            sudo mv /tmp/eksctl /usr/local/bin
            eksctl version
            aws --version
            
  install-kubectl:
    description: Install kubectl tools
    steps:
      - run: 
          name: Install kubectl
          command: |
            sudo apt -y install tar gzip unzip curl
            sudo curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo unzip awscliv2.zip
            sudo ./aws/install
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            install -m 0755 kubectl /bin/kubectl
            kubectl version --client
  destroy-environment:
    description: Destroy EKS cluster.    
    steps:
      - run:
          name: Destroy cluster
          when: on_fail
          command: |
            eksctl delete cluster --name=capstone-cluster --region=${AWS_DEFAULT_REGION}

jobs:
  lint-code:
    docker:
      - image: python:3.7.3-stretch    
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: Install dependencies
          command: |
            python3 -m venv devops
            . devops/bin/activate
            make install
            
      - save_cache:
          paths:
            - .devops
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: Run lint
          command: |
            . devops/bin/activate
            make lint
  create-docker-image:
    docker:
      - image: cimg/go:1.17
        auth:
          username: $DOCKERHUB_USERNAME 
          password: $DOCKERHUB_PASSWORD  
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
          docker_layer_caching: true      
      - run:
          name: Build image
          command: |
            sudo chmod +x run_docker.sh
            ./run_docker.sh ${DOCKER_USER} ${CIRCLE_WORKFLOW_ID:0:5}
      - run:
          name: Docker login
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - run:
          name: Push image to dockerhub
          command: |
            sudo chmod +x ./upload_docker.sh 
            ./upload_docker.sh ${DOCKER_USER} ${CIRCLE_WORKFLOW_ID:0:5}

  create-deploy-eks-cluster:
      docker:
        - image: circleci/node:13.8.0
      working_directory: ~/repo
      steps:
        - checkout
        - aws-cli/setup
        - kubernetes/install
        - install-eksctl 
        - run:
            name: Create EKS Cluster
            command: |                       
              eksctl create cluster \
                --name capstone-cluster \
                --region ${AWS_DEFAULT_REGION} \
                --nodegroup-name worker-node \
                --node-type t3.micro \
                --nodes 2 \
                --nodes-min 1 \
                --nodes-max 2
        - run:
            name: Deploy image into eks-cluster
            command: |
              curl -o kubectl https://amazon-eks.s3.us-east-1.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
              chmod +x ./kubectl
              mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin            
              aws eks --region us-east-1 update-kubeconfig --name capstone-cluster
              kubectl version --client
              export KUBECONFIG=~/.kube/config
              kubectl apply -f k8/services.yml
              kubectl apply -f k8/deployment.yml
              kubectl get svc
              kubectl get nodes
              kubectl get pods --all-namespaces        

workflows:
  Build:
    jobs:     
      - lint-code
      - create-docker-image:
          requires: [lint-code]
      - create-deploy-eks-cluster:
          requires: [create-docker-image]
